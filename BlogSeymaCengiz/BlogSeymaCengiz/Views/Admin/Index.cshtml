@model PagedList.IPagedList<BlogSeymaCengiz.Models.Article>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
}

<h2>ADMIN</h2>
<br><br />
<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "Admin", FormMethod.Get, new { enctype = "multipart/form-data" }))
{
    <p>
        Find by title: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            Image
        </th>
        <th>
            @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Content
        </th>
        <th>
            DateTime
        </th>
        <th>
            @Html.ActionLink("Author", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

        @foreach (var item in Model)
        {
            
          <tr>
            <td>
                    <img width="350px" height="250px" src="~/File?id=@item.Files.First(f => f.FileType == FileType.Image).FileId" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Content)
            </td>
            <td>
                <p><font size="%110">@Html.DisplayFor(modelItem => item.DateTime)</font></p>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
        </tr>
    
        <tr>

            <td>
                 @Html.ActionLink("Edit", "Edit", new { id = item.ArticleId })
                 @Html.ActionLink("Details", "Details", new { id = item.ArticleId })
                 @Html.ActionLink("Delete", "Delete", new { id = item.ArticleId })
            </td>

        </tr>


        }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))